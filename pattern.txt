Adapter Pattern
-We want to connect two objects with different roles, but communication is not possible because of incompatible interface
-Adapter pattern can solve this compatibilty issues. According to adapter pattern, we can create an adapter object like a middle ware which will convert the inputs from one object in a way that other object can understand it.
-Advantage is that there is no need to adapt any object as per the need of other object. Every object has its own role and follows SRP and OCP.
-Disadvantage is that we need extra interface that increases the code complexity
-Example: A tool stores the battery temperature in celsius but BMS can detect breach in fahrenheit. Therefor, we need adater interface for data conversions.

Builder Pattern
- This pattern is the creational pattern used when we want to create a complex object through number of steps. Different representations follow the same code structure steps
- The process might be easy as same steps has to be followed for each reresentational class but creating multiple class can complicate the logic
- house is the best example. House can contains different levels like basement, ground floor, terrace etc. but each contains 4 walls, windows, doors, floor

